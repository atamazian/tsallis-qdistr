% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsqweibulldistr.R
\name{tsqweibulldistr}
\alias{tsqweibulldistr}
\alias{dtsqweibull}
\alias{ptsqweibull}
\alias{qtsqweibull}
\alias{rtsqweibull}
\title{The q-Weibull distribution}
\source{
\code{[dpq]tsweibull} are calculated directly from the definitions, \code{rtsweibull} uses inversion.
}
\usage{
dtsqweibull(x, shape1, shape2, rate = 1, log = FALSE)

ptsqweibull(q, shape1, shape2, rate = 1, lower.tail = TRUE, log.p = FALSE)

qtsqweibull(p, shape1, shape2, rate = 1, lower.tail = TRUE, log.p = FALSE)

rtsqweibull(n, shape1, shape2, rate = 1)
}
\arguments{
\item{x, q}{vector of quantiles}

\item{shape1, shape2, rate}{shape and rate parameters, the latter defaulting to 1.}

\item{log}{logical; if TRUE, probabilities p are given as log(p).}

\item{lower.tail}{logical; if TRUE (default), probabilities are \emph{P[X ≤ x]}, otherwise, \emph{P[X > x]}.}

\item{p}{vector of probabilities}

\item{n}{number of observations. If \code{length(n) > 1}, the length is taken to be the number required.}
}
\value{
\code{dtsqweibull} gives the density, \code{ptsweibull} gives the distribution function, \code{qtsexp} gives the quantile function, and \code{rtsweibull} generates random deviates.

The length of the result is determined by \code{n} for \code{rtsweibull}, and is the maximum of the lengths of the numerical arguments for the other functions.

The numerical arguments other than \code{n} are recycled to the length of the result. Only the first elements of the logical arguments are used.
}
\description{
Density, distribution function, quantile functions and random generation for the \emph{q}-Weibull distribution with shapes \code{shape1} and \code{shape2} and rate \code{rate}.
}
\details{
If \code{shape1} is equal to 1, the \emph{q}-Weibull distribution becomes the Weibull distribution.
}
\note{
The cumulative hazard \emph{H(t) = -log(1 - F(t))} is \code{-ptsweibull(t, q, r, lower = FALSE, log = TRUE)}.
}
\examples{
x <- c(0, rlnorm(50))
all.equal(dtsqweibull(x, shape1 = 1, shape2 = 2, rate = pi), dweibull(x, shape = 2, scale = pi))
all.equal(ptsqweibull(x, shape1 = 1, shape2 = 2, rate = pi), pweibull(x, shape = 2, scale = pi))
all.equal(qtsqweibull(x/11, shape1 = 1, shape2 = 2, rate = pi), qweibull(x/11, shape = 2, scale = pi))
}
\references{
Picoli, S. Jr.; Mendes, R. S.; Malacarne, L. C. (2003). "q-exponential, Weibull, and q-Weibull distributions: an empirical analysis". Physica A: Statistical Mechanics and Its Applications. 324 (3): 678–688. arXiv:cond-mat/0301552. Bibcode:2003PhyA..324..678P. doi:10.1016/S0378-4371(03)00071-2. S2CID 119361445.
}
\seealso{
\code{\link[=tsqlog]{tsqlog()}} for the \emph{q}-logarithm and \emph{q}-exponential
}
